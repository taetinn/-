/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.35
 * Generated at: 2020-06-21 09:11:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/include/head.jsp", out, false);
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"wrap\">\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/include/top.jsp", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"clear\"></div>\r\n");
      out.write("\t<div id=\"sub_img_member\"></div>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"clear\"></div>\r\n");
      out.write("\t<nav id=\"sub_menu\">\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li> <a href=\"#\">Join us</a></li>\r\n");
      out.write("            <li> <a href=\"#\">Privacy policy</a></li>\r\n");
      out.write("    \t</ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("\t\r\n");
      out.write("\t<article>\r\n");
      out.write("\t\t\r\n");
      out.write("\t<h1>Join Us</h1>\r\n");
      out.write("\t<form id=\"join\" action=\"memberJoinPro.do\" method=\"post\" name=\"frm\">    \r\n");
      out.write("\t<fieldset>\r\n");
      out.write("\t\t<legend>Basic Info</legend>\r\n");
      out.write("\t\t<label>User ID</label> <input name=\"id\" type=\"text\" class=\"id\"> \r\n");
      out.write("\t\t<input type=\"button\" value=\"ID중복확인\" class=\"dup\" onclick=\"winopen()\">\r\n");
      out.write("\t\t<span id=\"idDupMessage\"></span>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<label>Password</label> <input name=\"passwd\" type=\"password\" class=\"pass\"><br>\r\n");
      out.write("\t\t<label>Retype Password</label> <input name=\"passwd2\" type=\"password\" class=\"pass\"><br>\r\n");
      out.write("\t\t<label>Name</label> <input name=\"name\" type=\"text\" class=\"nick\"><br>\r\n");
      out.write("\t\t<label>E-Mail</label> <input name=\"email\" type=\"email\" class=\"email\" ><br>\r\n");
      out.write("\t\t<label>Retype E-mail</label> <input name=\"email2\" type=\"email\" class=\"email\"><br>\r\n");
      out.write("\t</fieldset>\r\n");
      out.write("\t\r\n");
      out.write("\t<fieldset>\r\n");
      out.write("\t\t<legend>Optional</legend>\r\n");
      out.write("\t\t<label>Address</label> <input name=\"address\" type=\"text\" class=\"address\"><br>\r\n");
      out.write("\t\t<label>Phone Number</label> <input name=\"tel\" type=\"tel\" class=\"phone\"><br>\r\n");
      out.write("\t\t<label>Mobile Phone Number</label> <input name=\"mtel\" type=\"tel\" class=\"mobile\"><br>\r\n");
      out.write("\t</fieldset>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"clear\"></div>\r\n");
      out.write("\t<div id=\"buttons\">\r\n");
      out.write("\t\t<input type=\"submit\" value=\"회원가입\" class=\"submit\"> <input type=\"reset\" value=\"새로작성\" class=\"cancel\">\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</form> \r\n");
      out.write("\t\r\n");
      out.write("\t</article>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"clear\"></div>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/include/bottom.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script src=\"/script/jquery-3.5.1.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\t$('input[name=\"id\"]').keyup(function (event) {\r\n");
      out.write("\t\tvar id = $(this).val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl: '/ajax_join_IDCheck.do',\r\n");
      out.write("\t\t\tdata: { id: id },\r\n");
      out.write("\t\t\tsuccess: function (data) {\r\n");
      out.write("\t\t\t\tconsole.log(data.isIdDup);\r\n");
      out.write("\t\t\t\tconsole.log(data.name);\r\n");
      out.write("\t\t\t\tconsole.log(data.age);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tshowIdDupMessage(data);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfunction showIdDupMessage(data) {\r\n");
      out.write("\t\tif (data.isIdDup) {\r\n");
      out.write("\t\t\t$('span#idDupMessage').html('이미 사용중인 아이디 입니다.').css('color', 'red');\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$('span#idDupMessage').html('사용 가능한 아이디 입니다.').css('color', 'green');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tfunction winopen() {\r\n");
      out.write("\t\tvar id = document.frm.id.value;\r\n");
      out.write("\t\tconsole.log('id = ' + id);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (id == '') {\r\n");
      out.write("\t\t\talert('아이디를 입력하세요');\r\n");
      out.write("\t\t\tdocument.frm.id.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 새창 열어서 jsp요청   window.open()\r\n");
      out.write("\t\topen('/join_IDCheck.do?id=' + id, 'dupCheck', 'width=400,height=200');\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>   \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
