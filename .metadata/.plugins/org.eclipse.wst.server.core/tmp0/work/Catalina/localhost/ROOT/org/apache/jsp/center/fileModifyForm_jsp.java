/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.35
 * Generated at: 2020-06-30 07:19:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.center;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import exam.domain.AttachfileVo;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import exam.domain.BoardVo;
import java.util.List;
import exam.dao.BoardDao;

public final class fileModifyForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("exam.domain.AttachfileVo");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("java.time.LocalDateTime");
    _jspx_imports_classes.add("exam.domain.BoardVo");
    _jspx_imports_classes.add("exam.dao.BoardDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/head.jsp", out, false);
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\tspan.delete-addfile, span.delete-oldfile {\r\n");
      out.write("\t\tcolor: red;\r\n");
      out.write("\t\tfont-weight: bold;\r\n");
      out.write("\t\tmargin-left: 10px;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");

	// 세션값 가져오기
	String id = (String) session.getAttribute("id");
	// 세션값 없으면 login.jsp로 이동
	if (id == null) {
		response.sendRedirect("/member/login.jsp");
		return;
	}


	String pageNum = request.getParameter("pageNum");
	int num = Integer.parseInt(request.getParameter("num"));
	
	BoardDao boardDao = BoardDao.getInstance();
	
	BoardVo boardVo = boardDao.getBoardAndAttachfilesByNum(num);
	List<AttachfileVo> attachList = boardVo.getAttachList();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"wrap\">\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/top.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"clear\"></div>\r\n");
      out.write("\t<div id=\"sub_img_center\"></div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"clear\"></div>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/board_submenu.jsp", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<article>\r\n");
      out.write("\t\t\r\n");
      out.write("\t<h1>파일 게시판 글수정</h1>\r\n");
      out.write("\t\r\n");
      out.write("\t<form action=\"fileModifyPro.jsp\" method=\"post\" enctype=\"multipart/form-data\" name=\"frm\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"num\" value=\"");
      out.print(num );
      out.write("\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"pageNum\" value=\"");
      out.print(pageNum );
      out.write("\">\r\n");
      out.write("\t<table id=\"notice\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th scope=\"col\" width=\"200\">아이디</th>\r\n");
      out.write("\t\t\t<td style=\"text-align: left; width: 500px;\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"name\" value=\"");
      out.print(id );
      out.write("\" readonly>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th scope=\"col\">글제목</th>\r\n");
      out.write("\t\t\t<td style=\"text-align: left;\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"subject\" value=\"");
      out.print(boardVo.getSubject() );
      out.write("\">\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th scope=\"col\">파일</th>\r\n");
      out.write("\t\t\t<td style=\"text-align: left;\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" id=\"btnAddFile\">첨부파일 추가</button>\r\n");
      out.write("\t\t\t\t<div id=\"fileBox\">\r\n");
      out.write("\t\t\t\t\t<div id=\"oldFileBox\">\r\n");
      out.write("\t\t\t\t\t\t");

						for (AttachfileVo attachVo : attachList) {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"oldfile\" value=\"");
      out.print(attachVo.getUuid() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print(attachVo.getFilename() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"delete-oldfile\">X</span>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t");

						}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div id=\"newFileBox\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th scope=\"col\">글내용</th>\r\n");
      out.write("\t\t\t<td style=\"text-align: left;\">\r\n");
      out.write("\t\t\t\t<textarea rows=\"13\" cols=\"40\" name=\"content\">");
      out.print(boardVo.getContent() );
      out.write("</textarea>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"table_search\">\r\n");
      out.write("\t\t<button type=\"submit\">파일글수정</button>\r\n");
      out.write("\t\t<button type=\"reset\">다시쓰기</button>\r\n");
      out.write("\t\t<button type=\"button\" onclick=\"location.href='fileNotice.jsp?pageNum=");
      out.print(pageNum );
      out.write("'\">목록보기</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"clear\"></div>\r\n");
      out.write("\t<div id=\"page_control\">\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</article>\r\n");
      out.write("    \r\n");
      out.write("\t<div class=\"clear\"></div>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/bottom.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"/script/jquery-3.5.1.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar fileCount = ");
      out.print(attachList.size() );
      out.write(";\r\n");
      out.write("\r\n");
      out.write("\t// 정적 이벤트 바인딩\r\n");
      out.write("\t$('button#btnAddFile').click(function (event) {\r\n");
      out.write("\t\tif (fileCount >= 5) {\r\n");
      out.write("\t\t\talert('첨부파일은 최대 5개까지만 가능합니다.');\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar str = '<div><input type=\"file\" name=\"filename\"><span class=\"delete-addfile\">X</span></div>';\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//$(this).next().find('div#newFileBox').append(str);\r\n");
      out.write("\t\t$('div#newFileBox').append(str);\r\n");
      out.write("\t\tfileCount++;\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t// 동적 이벤트 바인딩\r\n");
      out.write("\t$('div#newFileBox').on('click', 'span.delete-addfile', function (event) {\r\n");
      out.write("\t\t$(this).parent().remove(); // empty()는 안쪽요소만 비움\r\n");
      out.write("\t\tfileCount--;\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t// 정적 이벤트 바인딩\r\n");
      out.write("\t$('span.delete-oldfile').click(function () {\r\n");
      out.write("\t\t$(this).parent().prev().prop('name', 'delfile');\r\n");
      out.write("\t\t$(this).parent().remove();\r\n");
      out.write("\t\tfileCount--;\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>   \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
