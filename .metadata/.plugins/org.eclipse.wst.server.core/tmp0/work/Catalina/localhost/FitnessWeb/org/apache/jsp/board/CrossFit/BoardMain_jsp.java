/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.35
 * Generated at: 2020-07-12 17:26:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board.CrossFit;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dao.MemberDao;
import java.time.LocalDateTime;
import java.util.List;
import vo.BoardVo;
import java.time.format.DateTimeFormatter;
import dao.BoardCfDao;

public final class BoardMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dao.MemberDao");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("vo.BoardVo");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("java.time.LocalDateTime");
    _jspx_imports_classes.add("dao.BoardCfDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");

 	
 	String id = (String)session.getAttribute("id");
 	System.out.println(id);
	int gxCheck = 0;
	MemberDao mdao = MemberDao.getInstance();
	
	if (id == null) {
		
      out.write("\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\talert('해당 게시물은 로그인 후 이용할 수 있습니다.');\r\n");
      out.write("\t\t\tlocation.href = '../../member/signIn.jsp';\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t");

		return;
	}
	
 	gxCheck = mdao.checkGxAuth(id,"cf");
 	if(id.equals("admin")){
 		gxCheck=1;
 	}
 	
	if(gxCheck==0){
 		
      out.write("\r\n");
      out.write(" \t\t<script>\r\n");
      out.write(" \t\t\talert('해당 게시판은 CrossFit 등록 회원만 이용할 수 있습니다.');\r\n");
      out.write(" \t\t\tlocation.href='../../index.jsp';\r\n");
      out.write(" \t\t</script>\r\n");
      out.write(" \t\t");
 
 	}
 	
 
 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Retrospect by TEMPLATED</title>\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("<!--[if lte IE 8]><script src=\"assets/js/ie/html5shiv.js\"></script><![endif]-->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../../assets/css/main.css\" />\r\n");
      out.write("<!--[if lte IE 8]><link rel=\"stylesheet\" href=\"assets/css/ie8.css\" /><![endif]-->\r\n");
      out.write("<!--[if lte IE 9]><link rel=\"stylesheet\" href=\"assets/css/ie9.css\" /><![endif]-->\r\n");
      out.write("</head>\r\n");


	
	String category = request.getParameter("category");
	String search = request.getParameter("search");

	category = (category == null) ? "" : category;
	search = (search == null) ? "" : search;

	BoardCfDao dao = BoardCfDao.getInstance();
	int totalCount = dao.getTotalCountfmCf(category,search);
	
	String strPageNum = request.getParameter("pageNum");
	if (strPageNum == null || strPageNum.equals("")) {
		strPageNum = "1";
	}
	
	int pageNum = Integer.parseInt(strPageNum);
	
	// 한 페이지에 15개씩 가져오기
	int pageSize = 10;
	int startRow = (pageNum-1) * pageSize;
		
	List<BoardVo> list = null;
	if (totalCount > 0) {
		list = dao.getBoards(startRow, pageSize, category, search);
	}

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- Header -->\r\n");
      out.write("\t<header id=\"header\" class=\"skel-layers-fixed\">\r\n");
      out.write("\t\t<h1>\r\n");
      out.write("\t\t\t<a href=\"index.html\">WORKOUT</a>\r\n");
      out.write("\t\t</h1>\r\n");
      out.write("\t\t<a href=\"#nav\">Menu</a>\r\n");
      out.write("\t</header>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Nav -->\r\n");
      out.write("\t<nav id=\"nav\">\r\n");
      out.write("\t\t<ul class=\"links\">\r\n");
      out.write("\t\t\t<li><a href=\"index.jsp\">Home</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"generic.html\">Generic</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"elements.html\">Elements</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"BoardMain.jsp\">Cross Fit</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"board/AerialYoga/BoardMain.jsp\">Aerial Yoga</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"board/Pilates/BoardMain.jsp\">Pilates</a></li>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t<div class=\"links 3u 6u$(small) 12u$(xsmall)\">\r\n");
      out.write("\t\t");
 if(id !=null){ 
      out.write("\r\n");
      out.write("\t\t\t<ul class=\"actions vertical small\">\r\n");
      out.write("\t\t\t\t<li><a href=\"../../MyPage.jsp\" class = \"button small\">My Page</a>\r\n");
      out.write("\t\t\t\t<li><a href=\"../../member/signOut.jsp\" class=\"button special small\">Sign Out</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");

		} else{
			
      out.write("\r\n");
      out.write("\t\t\t<ul class=\"actions vertical small\">\r\n");
      out.write("\t\t\t\t<li><a href=\"member/signIn.jsp\" class=\"button special small\">Sign In</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"member/signUp.jsp\" class=\"button small\">Sign Up</a></li>\r\n");
      out.write("\t\t\t</ul>");

		}
			
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Table -->\r\n");
      out.write("\t<section>\r\n");
      out.write("\t\t<p><h1>Cross Fit</h1>\r\n");
      out.write("\t\t<div >\r\n");
      out.write("\t\t\t<table class=\"table-wrapper\">\r\n");
      out.write("\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t");
if(id.equals("admin")){
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<th>Check</th>\r\n");
      out.write("\t\t\t\t\t\t\t");

						} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<th>No.</th>\r\n");
      out.write("\t\t\t\t\t\t<th>Title</th>\r\n");
      out.write("\t\t\t\t\t\t<th>Writer</th>\r\n");
      out.write("\t\t\t\t\t\t<th>Date</th>\r\n");
      out.write("\t\t\t\t\t\t<th>Read</th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t");

					if(totalCount >0){
						DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy.MM.dd");
						
						for (BoardVo vo : list) {
							LocalDateTime dateTime = vo.getRegDate();
							String strRegDate = dateTime.format(formatter);
							
							
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t");
if(id.equals("admin")){
								
      out.write("<td><input type=\"checkbox\" id=\"choice\" value=\"");
      out.print(vo.getNum() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label for=\"choice\"></label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t");

							}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print(vo.getNum() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td class=\"left\"  onclick=\"location.href='ContentCf.jsp?num=");
      out.print(vo.getNum() );
      out.write("&pageNum=");
      out.print(pageNum );
      out.write("'\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");

									if (vo.getReLev() > 0) {
										
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<img src=\"../../images/level.gif\" width=\"");
      out.print(vo.getReLev() * 10 );
      out.write("\" height=\"13\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<span>ㄴ</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");

									}
									
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
      out.print(vo.getTitle());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print(vo.getName() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print(strRegDate );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print(vo.getReadcount() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t");

						}
					} else {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"5\">게시판 글없음</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t");

					}
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div id=\"table_search\">\r\n");
      out.write("\t\t\t\t<form action=\"BoardMain.jsp\" method=\"get\">\r\n");
      out.write("\t\t\t\t\t<select name=\"category\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"content\" ");
if (category.equals("content")) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tselected ");
}
      out.write(">글내용</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"subject\" ");
if (category.equals("subject")) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tselected ");
}
      out.write(">글제목</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"name\" ");
if (category.equals("name")) {
      out.write(" selected\r\n");
      out.write("\t\t\t\t\t\t\t");
}
      out.write(">작성자</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t<div class=\"12u$\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"search\" value=\"");
      out.print(search);
      out.write("\" class=\"input_box\"> \r\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" value=\"Search\" class=\"btn small\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"Write\" class=\"btn small\" onclick=\"location.href='WriteForm.jsp?pageNum=");
      out.print(pageNum );
      out.write("'\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div id=\"page_control\">\r\n");
      out.write("\t");

		if (totalCount > 0) {
			// 총 페이지 수 구하기
			//int pageCount = totalCount / pageSize + (totalCount % pageSize == 0 ? 0 : 1);
			int pageCount = totalCount / pageSize;
			if (totalCount % pageSize > 0) {
				pageCount += 1;
			}
			
			// 화면에 보여줄 페이지번호의 갯수 설정
			int pageBlock = 5;
		
			
			// 페이지 블록의 시작페이지
			int startPage = ((pageNum / pageBlock) - (pageNum % pageBlock == 0 ? 1 : 0)) * pageBlock + 1;
			// 페이지 블록의 끝페이지
			
			int endPage = startPage + pageBlock - 1;
			if (endPage > pageCount) {
				endPage = pageCount;
			}
			
			
      out.write("\r\n");
      out.write("\t\t\t<a href=\"BoardMain.jsp?pageNum=");
      out.print(startPage);
      out.write("&category=");
      out.print(category );
      out.write("&search=");
      out.print(search );
      out.write("\">[처음]</a>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");

			
			// [이전]
			if (startPage > pageBlock) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"BoardMain.jsp?pageNum=");
      out.print(startPage - pageBlock );
      out.write("&category=");
      out.print(category );
      out.write("&search=");
      out.print(search );
      out.write("\">[이전]</a>\r\n");
      out.write("\t\t\t\t");

			}
					
			
			// 페이지블록 내에서의 시작페이지부터 끝페이지까지 번호출력
			for (int i=startPage; i<=endPage; i++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"BoardMain.jsp?pageNum=");
      out.print(i );
      out.write("&category=");
      out.print(category );
      out.write("&search=");
      out.print(search );
      out.write("\">\r\n");
      out.write("\t\t\t\t");

				if (i == pageNum) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<span style=\"font-weight: bold; color: red;\">");
      out.print(i );
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t");

				} else {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t");
      out.print(i );
      out.write("\r\n");
      out.write("\t\t\t\t\t");

				}
				
      out.write("\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t");

			}
			
			// [다음]
			if (endPage < pageCount) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"BoardMain.jsp?pageNum=");
      out.print(startPage + pageBlock );
      out.write("&category=");
      out.print(category );
      out.write("&search=");
      out.print(search );
      out.write("\">[다음]</a>\r\n");
      out.write("\t\t\t\t");

			}
			
      out.write("\r\n");
      out.write("\t\t\t<a href=\"BoardMain.jsp?pageNum=");
      out.print(pageCount);
      out.write("&category=");
      out.print(category );
      out.write("&search=");
      out.print(search );
      out.write("\">[끝]</a>\r\n");
      out.write("\t\t\t");

		} 
	
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</section>\r\n");
      out.write("\r\n");
      out.write("\t<!-- footer -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../include/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <!-- Scripts -->\r\n");
      out.write("   <script src=\"../../assets/jquery-3.5.1.js\"></script>\r\n");
      out.write("   <script src=\"../../assets/js/jquery.min.js\"></script>\r\n");
      out.write("   <script src=\"../../assets/js/skel.min.js\"></script>\r\n");
      out.write("   <script src=\"../../assets/js/util.js\"></script>\r\n");
      out.write("   <script src=\"../../assets/js/main.js\"></script>\r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
